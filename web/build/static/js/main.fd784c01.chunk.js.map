{"version":3,"sources":["core.js","Components/signup.jsx","Components/message.jsx","Context/reducer.jsx","Context/context.jsx","Components/login.jsx","Components/profileComponent.jsx","Components/PostsTemplate.jsx","Components/posts.jsx","Components/profile.jsx","Components/dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","validationSchema","yup","email","required","password","min","max","name","SignUp","history","useHistory","formik","useFormik","initialValues","onSubmit","values","resetForm","axios","post","then","res","console","log","data","push","className","Container","sx","marginTop","Paper","p","margin","maxWidth","flexGrow","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","to","Message","props","width","position","Alert","severity","message","reducer","state","action","payload","token","_id","created","user","GlobalContext","createContext","ContextProvider","children","useReducer","dispatch","Provider","LogIn","useContext","useState","messageBar","setMessageBar","setTimeout","SwipeableTemporaryDrawer","anchor","React","left","menuToggle","setmenuToggle","toggleDrawer","open","event","key","Fragment","onClick","SwipeableDrawer","onClose","onOpen","Box","role","onKeyDown","List","ListItem","Avatar","alt","height","src","Typography","gutterBottom","component","marginLeft","Divider","button","ListItemIcon","ListItemText","primary","AllPosts","Grid","container","justifyContent","posts","map","item","md","Card","CardHeader","avatar","bgcolor","red","title","subheader","CardContent","subject","description","CardActions","size","Posts","setValue","allPost","setAllPost","continuousPost","setContinuousPost","useEffect","get","result","arr","forEach","element","unshift","date","main","Description","m","elevation","multiline","rows","typography","TabContext","borderBottom","borderColor","TabList","newValue","centered","Tab","TabPanel","Profile","AppBar","Toolbar","IconButton","edge","mr","Dashboard","style","cursor","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd784c01.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import * as React from 'react';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport { Container, Paper, Button, TextField, Stack } from '@mui/material';\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from '../core'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n});\r\n\r\n\r\nexport default function SignUp() {\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        },\r\n\r\n        onSubmit: function (values, { resetForm }) {\r\n            axios.post(`${baseUrl}/api/v1/signup`, {\r\n                name: values.name,\r\n                email: values.email,\r\n                password: values.password,\r\n            }).then((res) => {\r\n                console.log(\"res: \", res.data);\r\n                if (res.data) {\r\n                    history.push(\"/login\")\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div  className=\"SignUpMain\">\r\n            <Container sx={{ marginTop: '5%' }}>\r\n                <Paper sx={{ p: 5, margin: 'auto', maxWidth: 500, flexGrow: 1 }}>\r\n                    <h1> Sign Up</h1>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack spacing={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                variant=\"outlined\"\r\n                                name=\"name\"\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText={formik.touched.name && formik.errors.name}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                            />\r\n\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Sign Up</Button>\r\n                            <Link to=\"/login\">Already Have an Account? Login</Link>\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function Message(props) {\r\n  return (\r\n    <Stack sx={{ width: \"100%\", position: \"absolute\" }} spacing={2}>\r\n      <Alert severity={props.type}>{props.message}</Alert>\r\n    </Stack>\r\n  );\r\n}","export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"USER_LOGIN\": {\r\n            if (action.payload.token &&\r\n                action.payload.name &&\r\n                action.payload.email &&\r\n                // action.payload.password &&\r\n                action.payload._id &&\r\n                action.payload.created) {\r\n                console.log(\"CurrentUser ==>\",action.payload)\r\n                return { ...state, user: action.payload };\r\n            }\r\n\r\n            else {\r\n                console.log(`invalid data in USER_LOGIN reducer `,action.payload);\r\n\r\n\r\n                return state;\r\n            }\r\n        }\r\n\r\n        case \"USER_LOGOUT\": {\r\n            return { ...state, user: null }; // set this to null on purpose, do not change\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n    user: {},\r\n};\r\n\r\nexport default function ContextProvider({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, data);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React, { useState, useContext } from \"react\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport { Container, Paper, Button, TextField, Stack } from '@mui/material';\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from '../core'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Message from './message';\r\nimport { GlobalContext } from '../Context/context'\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n});\r\n\r\n\r\nexport default function LogIn() {\r\n\r\n    let { dispatch } = useContext(GlobalContext);\r\n\r\n    let history = useHistory();\r\n    const [messageBar, setMessageBar] = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: function (values) {\r\n            // console.log(\"values: \", values)\r\n\r\n            axios.post(`${baseUrl}/api/v1/login`, {\r\n                email: values.email,\r\n                password: values.password,\r\n            }).then((res) => {\r\n\r\n                // console.log(\"res: \", res.data);\r\n\r\n                // localStorage.setItem('currentUser',JSON.stringify(res.data))\r\n\r\n                // if (res.data.email) {\r\n                //     setTimeout(() => {\r\n                //         history.push(\"/profile\")\r\n                //         setMessageBar([]);\r\n                //     }, 1000);\r\n                //     setMessageBar(true);\r\n                //     // history.push(\"/profile\")\r\n                // }\r\n\r\n\r\n                if (res.data !== \"error\") {\r\n                    dispatch({\r\n                        type: \"USER_LOGIN\",\r\n                        payload: {\r\n                            token:res.data.token,\r\n                            name:res.data.name,\r\n                            email:res.data.email,\r\n                            _id:res.data._id,\r\n                            created: res.data.created\r\n                            // name: res.data.name,\r\n                            // email: res.data.email,\r\n                            // password: res.data.password,\r\n                            // created: res.data.created\r\n                        },\r\n                    });\r\n\r\n                    //message\r\n                    setMessageBar(true);\r\n                    setTimeout(() => {\r\n                        history.push(\"/profile\");\r\n                        setMessageBar([]);\r\n                    }, 1000);\r\n                }\r\n\r\n                else {\r\n                    setMessageBar(false);\r\n                    setTimeout(() => {\r\n                        setMessageBar([]);\r\n                    }, 1000);\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"LoginMain\">\r\n\r\n            {messageBar === true ? <Message type=\"success\" message=\"Welcome\" /> : \"\"}\r\n            {messageBar === false ? (<Message type=\"error\" message=\"Invalid email or password\" />) : (\"\")}\r\n\r\n            <Container sx={{ marginTop: '5%' }}>\r\n                <Paper sx={{ p: 5, margin: 'auto', maxWidth: 500, flexGrow: 1 }}>\r\n\r\n                    <h1> Log In</h1>\r\n\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack spacing={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"filled-basic\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                            />\r\n\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Log In</Button>\r\n                            <Link to=\"/signup\">Don't Have an Account? SignUp</Link>\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from '../Context/context'\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport Divider from '@mui/material/Divider';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\n// import EditProfile from './editProfile'\r\n// import Stack from '@mui/material/Stack';\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n\r\n\r\n    const [menuToggle, setmenuToggle] = React.useState({\r\n        left: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setmenuToggle({ ...menuToggle, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <Box sx={{ width: 300 }} role=\"presentation\" onClick={toggleDrawer(anchor, false)} onKeyDown={toggleDrawer(anchor, false)}>\r\n\r\n            <List>\r\n\r\n                <ListItem >\r\n                    <Avatar alt=\"User\"\r\n                        sx={{ width: 56, height: 56 }}\r\n                        src=\"https://media-exp1.licdn.com/dms/image/C5103AQGAb_GYoLFM7A/profile-displayphoto-shrink_200_200/0/1564347397659?e=1639612800&v=beta&t=1zAw1iPqsETqK7DUN2nXvydn8wnz8n26I1pMPXUP0_c\" />\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\"\r\n                        sx={{ marginLeft: 3, marginTop: 1 }}>\r\n                        {state.user.name}\r\n                    </Typography>\r\n\r\n                </ListItem>\r\n\r\n            </List>\r\n\r\n            <Divider />\r\n\r\n\r\n            <List>\r\n                <ListItem button key={state.user.name}>\r\n                    <ListItemIcon>\r\n                        <AccountBoxIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.name} />\r\n                </ListItem>\r\n\r\n                <ListItem button key={state.user.email}>\r\n                    <ListItemIcon>\r\n                        <MailIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.email} />\r\n                </ListItem>\r\n\r\n                <ListItem button key={state.user.created}>\r\n                    <ListItemIcon>\r\n                        <DateRangeIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.created} />\r\n                </ListItem>\r\n            </List>\r\n\r\n\r\n            <Divider />\r\n\r\n            {/* <List>\r\n\r\n                <ListItem >\r\n                    <EditProfile />\r\n                </ListItem>\r\n\r\n            </List> */}\r\n\r\n\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment key='left'>\r\n                <Button color=\"inherit\" onClick={toggleDrawer('left', true)}>Profile</Button>\r\n                <SwipeableDrawer anchor='left' open={menuToggle['left']} onClose={toggleDrawer('left', false)} onOpen={toggleDrawer('left', true)} >\r\n                    {list('left')}\r\n                </SwipeableDrawer>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport Grid from '@mui/material/Grid';\r\nimport Divider from '@mui/material/Divider';\r\n\r\n\r\n\r\nexport default function AllPosts(props) {\r\n\r\n    // console.log(\"Data in Props ==>\", props)\r\n    return (\r\n        <div>\r\n            \r\n            <Grid container spacing={2} sx={{ flexGrow: 1 }} justifyContent=\"center\">\r\n                {props.posts.map(post => {\r\n                    return (\r\n\r\n                        <Grid item md={6} key={post._id}>\r\n\r\n                            <Card sx={{ maxWidth: 'auto' , height :'250px'}}>\r\n                                <CardHeader\r\n                                    avatar={<Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\"> A </Avatar>}\r\n                                    title={post.user} subheader={post.created}\r\n                                />\r\n                                <Divider />\r\n\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                        {post.subject}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        {post.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n\r\n                                <CardActions>\r\n                                    <Button size=\"small\">Share</Button>\r\n                                    <Button size=\"small\">Learn More</Button>\r\n                                </CardActions>\r\n\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport PostsTemplate from './PostsTemplate';\r\nimport React, { useContext, useEffect,useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport { baseUrl } from '../core';\r\nimport Stack from '@mui/material/Stack';\r\nimport { GlobalContext } from '../Context/context'\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    subject: yup\r\n        .string('Enter your Subject')\r\n        .required('Email is required'),\r\n    description: yup\r\n        .string('Enter your Description')\r\n        .required('Password is required'),\r\n});\r\n\r\n\r\n\r\n\r\nfunction Posts() {\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n    // console.log(state)\r\n\r\n    const [allPost, setAllPost] = useState([]);\r\n    const [continuousPost, setContinuousPost] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/post`).then((result) => {\r\n\r\n            console.log(\"POSTS in DB ==>\",result)\r\n            let arr = [];\r\n            result.data.forEach((element) => {\r\n                arr.unshift(element);\r\n            });\r\n            setAllPost([...arr]);\r\n        });\r\n        return () => {\r\n            // cleanup\r\n        };\r\n        // eslint-disable-next-line\r\n    }, [continuousPost]);\r\n\r\n\r\n\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            subject: '',\r\n            description: '',\r\n        },\r\n\r\n        onSubmit: function (values) {\r\n\r\n            console.log(values);\r\n\r\n            axios.post(`${baseUrl}/api/v1/profile`, {\r\n                user: state.user.name,\r\n                email : state.user.email,\r\n                subject: values.subject,\r\n                description: values.description,\r\n            }).then((res) => {\r\n                console.log(\"res: \", res.data);\r\n                // if (res.data) {\r\n                //     history.push(\"/login\")\r\n                setContinuousPost(!continuousPost);\r\n                // }\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    const [posts, setPosts] = useState(\r\n        [\r\n            {\r\n                key: 1,\r\n                avatar: 'U',\r\n                user: 'Usama Usman',\r\n                date: '27 October 2021',\r\n                main: 'Dummy',\r\n                Description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore temporibus porro quidem laborum maiores? Reprehenderit ratione ipsum recusandae nihil? Alias saepe porro possimus eligendi accusantium odit, at voluptates mollitia vel.'\r\n\r\n            },\r\n\r\n            {\r\n                key: 2,\r\n                avatar: 'A',\r\n                user: 'Abdul Rafeh',\r\n                date: '27 October 2021',\r\n                main: 'Abdul Rafeh',\r\n                Description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore temporibus porro quidem laborum maiores? Reprehenderit ratione ipsum recusandae nihil? Alias saepe porro possimus eligendi accusantium odit, at voluptates mollitia vel.'\r\n            },\r\n            {\r\n                key: 3,\r\n                avatar: 'J',\r\n                user: 'Javed Ali',\r\n                date: '27 October 2021',\r\n                main: 'Javed Ali',\r\n                Description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore temporibus porro quidem laborum maiores? Reprehenderit ratione ipsum recusandae nihil? Alias saepe porro possimus eligendi accusantium odit, at voluptates mollitia vel.'\r\n\r\n            },\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Box sx={{ m: 3 }}>\r\n                <Paper elevation={3} sx={{ p: 5 }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack spacing={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Subject\"\r\n                                variant=\"outlined\"\r\n                                name=\"subject\"\r\n                                value={formik.values.subject}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n                                helperText={formik.touched.subject && formik.errors.subject}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth multiline\r\n                                color=\"primary\" id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" name=\"description\"\r\n                                rows={4}\r\n                                value={formik.values.description}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                helperText={formik.touched.description && formik.errors.description}\r\n                            />\r\n\r\n\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Post</Button>\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                        <TabList onChange={handleChange} aria-label=\"lab API tabs example\" centered>\r\n                            <Tab label=\"News Feed\" value=\"1\" />\r\n                            <Tab label=\"My Posts\" value=\"2\" />\r\n\r\n                        </TabList>\r\n                    </Box>\r\n                    <TabPanel value=\"1\">\r\n                        <PostsTemplate posts={allPost} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"2\">\r\n                        Hello\r\n                        {/* <PostsTemplate posts={posts} /> */}\r\n                    </TabPanel>\r\n\r\n                </TabContext>\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React, { useContext, useState } from \"react\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ProfileComponenet from './profileComponent'\r\nimport { GlobalContext } from '../Context/context'\r\nimport Paper from '@mui/material/Paper';\r\nimport Posts from './posts'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Message from './message'\r\n\r\n\r\n\r\n\r\nexport default function Profile() {\r\n    const history = useHistory();\r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n    // console.log(\"State ==>\",state);\r\n\r\n    const [messageBar, setMessageBar] = useState(\"\");\r\n\r\n    const logout = () => {\r\n        if (state?.user?.name) {\r\n            setMessageBar(true);\r\n            setTimeout(() => {\r\n                history.push(\"/login\");\r\n                dispatch({\r\n                    type: \"USER_LOGOUT\",\r\n                    payload: null,\r\n                });\r\n                setMessageBar([]);\r\n            }, 1000);\r\n        } else {\r\n            setMessageBar(false);\r\n            setTimeout(() => {\r\n                setMessageBar([]);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}></IconButton>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Dashboard\r\n                        </Typography>\r\n\r\n                        <ProfileComponenet />\r\n                        <Button color=\"inherit\" onClick={logout}>Logout</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n            {/* <Paper variant=\"outlined\" >\r\n                <h2>Hello There</h2>\r\n            </Paper> */}\r\n\r\n            {/* <CreatePost /> */}\r\n\r\n            <Paper variant=\"outlined\" >\r\n                <Posts />\r\n            </Paper>\r\n\r\n            {messageBar === true ? (\r\n                <Message type=\"success\" message=\"Good bye!\" />\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            {messageBar === false ? (\r\n                <Message type=\"error\" message=\"Sorry! Something went wrong\" />\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\n// import { Link } from \"react-router-dom\";\r\n// import Link from '@mui/material/Link';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Dashboard() {\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                            sx={{ mr: 2 }}\r\n                        >\r\n\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            <span\r\n                                onClick={() => history.push(\"/\")}\r\n                                style={{ cursor: \"pointer\" }}\r\n                            >\r\n                                Task Application\r\n                            </span>\r\n                        </Typography>\r\n                        \r\n\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/login\")}>\r\n                            Login\r\n                        </Button>\r\n\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/signup\")}>\r\n                            Signup\r\n                        </Button>\r\n\r\n                        {/* <Button color=\"inherit\" onClick={() => history.push(\"/profile\")}>\r\n                            Profile\r\n                        </Button> */}\r\n\r\n                        {/* \r\n                        <Link to=\"/login\" sx={{ margin: 1 }} color=\"inherit\" underline=\"none\" >Login</Link>\r\n                        <Link to=\"/signup\" sx={{ margin: 1 }} color=\"inherit\" underline=\"none\">Sign Up</Link>\r\n                        <Link to=\"/profile\" sx={{ margin: 1 }} color=\"inherit\" underline=\"none\">Profile</Link> */}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n\r\n            <h1>Welcome to the App , Navigate to proceed</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import './App.css';\nimport SignUp from './Components/signup'\nimport LogIn from './Components/login'\nimport Profile from './Components/profile';\nimport Dashboard from './Components/dashboard';\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/login\">\n          <LogIn />\n        </Route>\n\n        \n\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n\n        <Route exact path=\"/signup\">\n          <SignUp />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ContextProvider from './Context/context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}