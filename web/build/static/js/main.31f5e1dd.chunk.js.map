{"version":3,"sources":["core.js","Components/signup.jsx","Components/message.jsx","Context/reducer.jsx","Context/context.jsx","Components/login.jsx","Components/profileComponent.jsx","Components/ModalContent.jsx","Components/PostsTemplate.jsx","firebase.js","Components/posts.jsx","Components/profile.jsx","Components/dashboard.jsx","Components/forgetPassword.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","validationSchema","yup","email","required","password","min","max","name","SignUp","history","useHistory","formik","useFormik","initialValues","onSubmit","values","resetForm","axios","post","then","res","console","log","data","push","className","Container","sx","marginTop","Paper","p","margin","maxWidth","flexGrow","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","to","Message","props","width","position","Alert","severity","message","reducer","state","action","payload","_id","user","GlobalContext","createContext","undefined","ContextProvider","children","useReducer","dispatch","Provider","LogIn","useContext","useState","messageBar","setMessageBar","withCredentials","created","setTimeout","catch","e","SwipeableTemporaryDrawer","anchor","React","left","menuToggle","setmenuToggle","toggleDrawer","open","event","key","Fragment","onClick","SwipeableDrawer","onClose","onOpen","Box","role","onKeyDown","List","ListItem","Avatar","alt","height","src","Typography","gutterBottom","component","marginLeft","Divider","button","ListItemIcon","ListItemText","primary","subject","description","ModalContent","show","setShow","Modal","onHide","Header","closeButton","Title","Body","m","multiline","rows","AllPosts","Grid","container","justifyContent","posts","map","item","md","Card","CardHeader","avatar","bgcolor","red","title","subheader","IconButton","CardContent","my","img","CardMedia","objectFit","background","image","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","imageFile","Posts","setValue","progress","setProgress","postBtn","setPostBtn","allPost","setAllPost","continuousPost","setContinuousPost","currentUserPosts","setCurrentUserPosts","useEffect","get","result","arr","forEach","element","unshift","filter","elevation","accept","file","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","prog","Math","round","bytesTransferred","totalBytes","err","getDownloadURL","url","fileUpload","target","files","LinearProgress","disabled","typography","TabContext","borderBottom","borderColor","TabList","newValue","centered","Tab","TabPanel","Skeleton","Profile","AppBar","Toolbar","size","edge","mr","Dashboard","style","cursor","steps","ForgetPassword","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","step","isStepSkipped","has","mt","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","length","mb","display","flexDirection","pt","flex","prevActiveStep","Error","prevSkipped","newSkipped","add","delete","App","baseURL","exact","path","forgetPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31f5e1dd.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import * as React from 'react';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport { Container, Paper, Button, TextField, Stack } from '@mui/material';\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from '../core'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n});\r\n\r\n\r\nexport default function SignUp() {\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        },\r\n\r\n        onSubmit: function (values, { resetForm }) {\r\n            axios.post(`${baseUrl}/api/v1/signup`, {\r\n                name: values.name,\r\n                email: values.email,\r\n                password: values.password,\r\n            }).then((res) => {\r\n                console.log(\"res: \", res.data);\r\n                if (res.data) {\r\n                    history.push(\"/login\")\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div  className=\"SignUpMain\">\r\n            <Container sx={{ marginTop: '5%' }}>\r\n                <Paper sx={{ p: 5, margin: 'auto', maxWidth: 500, flexGrow: 1 }}>\r\n                    <h1> Sign Up</h1>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack spacing={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                variant=\"outlined\"\r\n                                name=\"name\"\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText={formik.touched.name && formik.errors.name}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                            />\r\n\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Sign Up</Button>\r\n                            <Link to=\"/login\">Already Have an Account? Login</Link>\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function Message(props) {\r\n  return (\r\n    <Stack sx={{ width: \"100%\", position: \"absolute\" }} spacing={2}>\r\n      <Alert severity={props.type}>{props.message}</Alert>\r\n    </Stack>\r\n  );\r\n}","export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"USER_LOGIN\": {\r\n            if (\r\n                action.payload.name &&\r\n                action.payload.email && action.payload._id\r\n                // action.payload._id &&\r\n                // action.payload.created\r\n                \r\n                ) {\r\n                // console.log(\"CurrentUser ==>\", action.payload)\r\n                return { ...state, user: action.payload };\r\n            }\r\n\r\n            else {\r\n                console.log(`invalid data in USER_LOGIN reducer `, action.payload);\r\n                return state;\r\n            }\r\n        }\r\n\r\n        case \"USER_LOGOUT\": {\r\n            return { ...state, user: null }; // set this to null on purpose, do not change\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n    user: undefined,\r\n};\r\n\r\nexport default function ContextProvider({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, data);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React, { useState, useContext } from \"react\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport { Container, Paper, Button, TextField, Stack } from '@mui/material';\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from '../core'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Message from './message';\r\nimport { GlobalContext } from '../Context/context'\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n});\r\n\r\n\r\nexport default function LogIn() {\r\n\r\n    let { dispatch } = useContext(GlobalContext);\r\n\r\n    let history = useHistory();\r\n    const [messageBar, setMessageBar] = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit:(values )=> {\r\n            // console.log(\"values: \", values)\r\n\r\n            axios.post(`${baseUrl}/api/v1/login`, {\r\n                email: values.email,\r\n                password: values.password,\r\n            },{\r\n                withCredentials: true\r\n            }).then((res) => {\r\n\r\n                console.log(\"res: \", res.data);\r\n\r\n                // localStorage.setItem('currentUser',JSON.stringify(res.data))\r\n\r\n                // if (res.data.email) {\r\n                //     setTimeout(() => {\r\n                //         history.push(\"/profile\")\r\n                //         setMessageBar([]);\r\n                //     }, 1000);\r\n                //     setMessageBar(true);\r\n                //     // history.push(\"/profile\")\r\n                // }\r\n                // resetForm({})\r\n\r\n                if (res.data) {\r\n\r\n            //         console.log(res.data);\r\n\r\n                    dispatch({\r\n                        type: \"USER_LOGIN\",\r\n                        payload: {\r\n                            // token:res.data.token,\r\n                            name: res.data.name,\r\n                            email: res.data.email,\r\n                            _id: res.data._id,\r\n                            created: res.data.created\r\n                            // name: res.data.name,\r\n                            // email: res.data.email,\r\n                            // password: res.data.password,\r\n                            // created: res.data.created\r\n                        },\r\n                    });\r\n\r\n            //         //message\r\n                    setMessageBar(true);\r\n                    setTimeout(() => {\r\n                        history.push(\"/profile\");\r\n                        setMessageBar([]);\r\n                    }, 1000);\r\n                }\r\n\r\n                else {\r\n                    setMessageBar(false);\r\n                    setTimeout(() => {\r\n                        setMessageBar([]);\r\n                    }, 1000);\r\n                }\r\n            }).catch((e) => {\r\n                console.log(\"receive error from database\", e);\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"LoginMain\">\r\n\r\n            {messageBar === true ? <Message type=\"success\" message=\"Welcome\" /> : \"\"}\r\n            {messageBar === false ? (<Message type=\"error\" message=\"Invalid email or password\" />) : (\"\")}\r\n\r\n            <Container sx={{ marginTop: '5%' }}>\r\n                <Paper sx={{ p: 5, margin: 'auto', maxWidth: 500, flexGrow: 1 }}>\r\n\r\n                    <h1> Log In</h1>\r\n\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack spacing={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"filled-basic\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                            />\r\n\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Log In</Button>\r\n                            <Link to=\"/signup\">Don't Have an Account? SignUp</Link>\r\n                            <Link to=\"/forget_password\">Forget Password</Link>\r\n\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from '../Context/context'\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport Divider from '@mui/material/Divider';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\n// import EditProfile from './editProfile'\r\n// import Stack from '@mui/material/Stack';\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n\r\n    let { state} = useContext(GlobalContext);\r\n    // console.log(\"Profile==>\",state)\r\n\r\n    const [menuToggle, setmenuToggle] = React.useState({\r\n        left: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setmenuToggle({ ...menuToggle, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <Box sx={{ width: 300 }} role=\"presentation\" onClick={toggleDrawer(anchor, false)} onKeyDown={toggleDrawer(anchor, false)}>\r\n\r\n            <List>\r\n\r\n                <ListItem >\r\n                    <Avatar alt=\"User\"\r\n                        sx={{ width: 56, height: 56 }}\r\n                        src=\"https://media-exp1.licdn.com/dms/image/C5103AQGAb_GYoLFM7A/profile-displayphoto-shrink_200_200/0/1564347397659?e=1639612800&v=beta&t=1zAw1iPqsETqK7DUN2nXvydn8wnz8n26I1pMPXUP0_c\" />\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\"\r\n                        sx={{ marginLeft: 3, marginTop: 1 }}>\r\n                        {state.user.name}\r\n                    </Typography>\r\n\r\n                </ListItem>\r\n\r\n            </List>\r\n\r\n            <Divider />\r\n\r\n\r\n            <List>\r\n                <ListItem button key={state.user.name}>\r\n                    <ListItemIcon>\r\n                        <AccountBoxIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.name} />\r\n                </ListItem>\r\n\r\n                <ListItem button key={state.user.email}>\r\n                    <ListItemIcon>\r\n                        <MailIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.email} />\r\n                </ListItem>\r\n\r\n                <ListItem button key={state.user.created}>\r\n                    <ListItemIcon>\r\n                        <DateRangeIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.created} />\r\n                </ListItem>\r\n            </List>\r\n\r\n\r\n            <Divider />\r\n\r\n            {/* <List>\r\n\r\n                <ListItem >\r\n                    <EditProfile />\r\n                </ListItem>\r\n\r\n            </List> */}\r\n\r\n\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment key='left'>\r\n                <Button color=\"inherit\" onClick={toggleDrawer('left', true)}>Profile</Button>\r\n                <SwipeableDrawer anchor='left' open={menuToggle['left']} onClose={toggleDrawer('left', false)} onOpen={toggleDrawer('left', true)} >\r\n                    {list('left')}\r\n                </SwipeableDrawer>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\n// import Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    subject: yup\r\n        .string('Enter your Subject')\r\n        .required('Email is required'),\r\n    description: yup\r\n        .string('Enter your Description')\r\n        .required('Password is required'),\r\n});\r\n\r\n\r\nfunction ModalContent() {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            subject: '',\r\n            description: '',\r\n        },\r\n\r\n\r\n\r\n        onSubmit: function (values) {\r\n            console.log(values);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"light\" onClick={handleShow}>\r\n                Edit\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update Post</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Box sx={{ m: 3 }}>\r\n\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <Stack spacing={2}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    color=\"primary\"\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Subject\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"subject\"\r\n                                    value={formik.values.subject}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n                                    helperText={formik.touched.subject && formik.errors.subject}\r\n                                />\r\n\r\n                                <TextField\r\n                                    fullWidth multiline\r\n                                    color=\"primary\" id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" name=\"description\"\r\n                                    rows={4}\r\n                                    value={formik.values.description}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                    helperText={formik.touched.description && formik.errors.description}\r\n                                />\r\n\r\n\r\n                                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Post</Button>\r\n                            </Stack>\r\n                        </form>\r\n                    </Box>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default ModalContent","import React, { useContext } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\n// import CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\n// import Button from \"@mui/material/Button\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { GlobalContext } from \"../Context/context\";\r\nimport ModalContent from \"./ModalContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\n\r\nexport default function AllPosts(props) {\r\n  let { state } = useContext(GlobalContext);\r\n  console.log(props);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2} sx={{ flexGrow: 1 }} justifyContent=\"center\">\r\n        {props.posts.map((post) => {\r\n          return (\r\n            <Grid item md={6} key={post._id}>\r\n              <Card sx={{ maxWidth: \"auto\", height: \"420px\" }}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                      {\" \"}\r\n                      A{\" \"}\r\n                    </Avatar>\r\n                  }\r\n                  title={post.user}\r\n                  subheader={post.created}\r\n                  action={\r\n                    state.user.email === post.email ? (\r\n                      // <IconButton aria-label=\"settings\">\r\n                      //     <EditIcon />\r\n                      // </IconButton>\r\n\r\n                      <ModalContent />\r\n                    ) : (\r\n                      <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon />\r\n                      </IconButton>\r\n                    )\r\n                  }\r\n                />\r\n                <Divider />\r\n\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {post.subject}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    sx={{ my: 2 }}\r\n                  >\r\n                    {post.description}\r\n                  </Typography>\r\n\r\n                  {post.img ? (\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      height=\"200\"\r\n                      sx={{ objectFit: \"contain\", background: \"#afafaf\" }}\r\n                      image={post.img}\r\n                      alt={post.subject}\r\n                    />\r\n                  ) : null}\r\n                </CardContent>\r\n\r\n                {/* <CardActions>\r\n                  <Button size=\"small\">Share</Button>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions> */}\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD03t0b_6NJ5bOvPJTZAjrkCe4cHQOi02c\",\r\n  authDomain: \"saylaniwebdevcourse.firebaseapp.com\",\r\n  databaseURL: \"https://saylaniwebdevcourse.firebaseio.com\",\r\n  projectId: \"saylaniwebdevcourse\",\r\n  storageBucket: \"saylaniwebdevcourse.appspot.com\",\r\n  messagingSenderId: \"516838591025\",\r\n  appId: \"1:516838591025:web:47422cbb26fa3134df6310\",\r\n  measurementId: \"G-G8NW3KEPF8\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(app)\r\n","import Box from \"@mui/material/Box\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport TabContext from \"@mui/lab/TabContext\";\r\nimport TabList from \"@mui/lab/TabList\";\r\nimport TabPanel from \"@mui/lab/TabPanel\";\r\nimport PostsTemplate from \"./PostsTemplate\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport { baseUrl } from \"../core\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { GlobalContext } from \"../Context/context\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { storage } from '../firebase'\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"@firebase/storage\";\r\n\r\nconst validationSchema = yup.object({\r\n  subject: yup\r\n    .string(\"Enter your Subject\")\r\n    .required(\"Email is required\"),\r\n\r\n  description: yup\r\n    .string(\"Enter your Description\")\r\n    .required(\"Password is required\"),\r\n\r\n  imageFile: yup\r\n    .string(\"Select your Image File\")\r\n    .required(\"Image File is required\"),\r\n});\r\n\r\nfunction Posts() {\r\n  const [value, setValue] = React.useState(\"1\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [postBtn, setPostBtn] = useState(false)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  let { state } = useContext(GlobalContext);\r\n\r\n  const [allPost, setAllPost] = useState(null);\r\n  const [continuousPost, setContinuousPost] = useState(false);\r\n  const [currentUserPosts, setCurrentUserPosts] = useState(null);\r\n  // const [imglink, setImglink] = useState(null)\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${baseUrl}/api/v1/post`, { withCredentials: true })\r\n      .then((result) => {\r\n        // console.log(\"POSTS in DB ==>\", result);\r\n        let arr = [];\r\n        result.data.forEach((element) => {\r\n          arr.unshift(element);\r\n        });\r\n\r\n        setAllPost([...arr]);\r\n\r\n        let currentUserPosts = arr.filter(\r\n          (post) => post.email === state.user.email\r\n        );\r\n        setCurrentUserPosts(currentUserPosts);\r\n      });\r\n    return () => {\r\n      // cleanup\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, [continuousPost]);\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      subject: \"\",\r\n      description: \"\",\r\n      imageFile: \"\"\r\n    },\r\n\r\n    \r\n    onSubmit: function (values, { resetForm }) {\r\n      console.log(values);\r\n      resetForm({ values: '' })\r\n      setProgress(0)\r\n      setPostBtn(false)\r\n\r\n\r\n      // formik.values.imageFile = ''\r\n\r\n      // fileUpload(values.imageFile)\r\n\r\n      axios.post(`${baseUrl}/api/v1/post`, {\r\n        user: state.user.name,\r\n        email: state.user.email,\r\n        subject: values.subject,\r\n        description: values.description,\r\n        img: values.imageFile\r\n      },\r\n        {\r\n          withCredentials: true\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n          // if (res.data) {\r\n          //     history.push(\"/login\")\r\n          setContinuousPost(!continuousPost);\r\n          // }\r\n        });\r\n\r\n\r\n    },\r\n  });\r\n\r\n\r\n  const fileUpload = (file) => {\r\n    if (!file) return;\r\n\r\n    const storageRef = ref(storage, `/files/${file.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, file)\r\n\r\n    uploadTask.on(\"state_changed\", (snapshot) => {\r\n      const prog = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      );\r\n\r\n      setProgress(prog);\r\n\r\n    }, (err) => console.log(err),\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref)\r\n          .then(url => {\r\n            setPostBtn(true)\r\n            formik.values.imageFile = url\r\n          })\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 3 }}>\r\n        <Paper elevation={3} sx={{ p: 5 }}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Stack spacing={2}>\r\n              <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Subject\"\r\n                variant=\"outlined\"\r\n                name=\"subject\"\r\n                value={formik.values.subject}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n                helperText={formik.touched.subject && formik.errors.subject}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                color=\"primary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                name=\"description\"\r\n                rows={4}\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.description &&\r\n                  Boolean(formik.errors.description)\r\n                }\r\n                helperText={\r\n                  formik.touched.description && formik.errors.description\r\n                }\r\n              />\r\n\r\n\r\n              <input type=\"file\" accept=\"image/*\" name=\"imageFile\" required\r\n                onChange={\r\n                  (event) => {\r\n                    // formik.setFieldValue('imageFile', event.target.files[0])\r\n                    fileUpload(event.target.files[0])\r\n                  }\r\n                }\r\n\r\n\r\n              />\r\n              {/* <h5>Uploaded : {progress} %</h5>\r\n               */}\r\n\r\n              <Box sx={{ width: '100%' }}>\r\n                <LinearProgress variant=\"determinate\" value={progress} />\r\n              </Box>\r\n\r\n              {/* {progress > 100 ? <h1>Yes</h1> : <h1>No</h1>} */}\r\n\r\n              {postBtn ?\r\n                // <h1>Yes</h1>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Post</Button>\r\n                :\r\n                // <h1>No</h1>\r\n                <Button fullWidth disabled variant=\"contained\" color=\"primary\" >Post</Button>\r\n              }\r\n\r\n\r\n\r\n              {/* <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Post</Button>\r\n              <Button fullWidth disabled variant=\"contained\" color=\"primary\" >Post</Button> */}\r\n\r\n\r\n            </Stack>\r\n          </form>\r\n        </Paper>\r\n      </Box>\r\n\r\n      <Box sx={{ width: \"100%\", typography: \"body1\" }}>\r\n        <TabContext value={value}>\r\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n            <TabList\r\n              onChange={handleChange}\r\n              aria-label=\"lab API tabs example\"\r\n              centered\r\n            >\r\n              <Tab label=\"News Feed\" value=\"1\" />\r\n              <Tab label=\"My Posts\" value=\"2\" />\r\n            </TabList>\r\n          </Box>\r\n          <TabPanel value=\"1\">\r\n            {allPost && <PostsTemplate posts={allPost} />}\r\n\r\n            {!allPost && (\r\n              <div>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  sx={{ flexGrow: 1 }}\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Grid item md={6}>\r\n                    <Stack spacing={1}>\r\n                      <Skeleton variant=\"text\" />\r\n                      <Skeleton variant=\"circular\" width={40} height={40} />\r\n                      <Skeleton\r\n                        variant=\"rectangular\"\r\n                        width={210}\r\n                        height={250}\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n\r\n                  <Grid item md={6}>\r\n                    <Stack spacing={1}>\r\n                      <Skeleton variant=\"text\" />\r\n                      <Skeleton variant=\"circular\" width={40} height={40} />\r\n                      <Skeleton\r\n                        variant=\"rectangular\"\r\n                        width={210}\r\n                        height={250}\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel value=\"2\">\r\n            {currentUserPosts && <PostsTemplate posts={currentUserPosts} />}\r\n\r\n            {!currentUserPosts && (\r\n              <div>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  sx={{ flexGrow: 1 }}\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Grid item md={6}>\r\n                    <Stack spacing={1}>\r\n                      <Skeleton variant=\"text\" />\r\n                      <Skeleton variant=\"circular\" width={40} height={40} />\r\n                      <Skeleton\r\n                        variant=\"rectangular\"\r\n                        width={210}\r\n                        height={250}\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n\r\n                  <Grid item md={6}>\r\n                    <Stack spacing={1}>\r\n                      <Skeleton variant=\"text\" />\r\n                      <Skeleton variant=\"circular\" width={40} height={40} />\r\n                      <Skeleton\r\n                        variant=\"rectangular\"\r\n                        width={210}\r\n                        height={250}\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </TabPanel>\r\n        </TabContext>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import React, { useContext, useState } from \"react\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ProfileComponenet from './profileComponent'\r\nimport { GlobalContext } from '../Context/context'\r\nimport Paper from '@mui/material/Paper';\r\nimport Posts from './posts'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Message from './message'\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../core';\r\n\r\nexport default function Profile() {\r\n    const history = useHistory();\r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n\r\n    // console.log(\"State in Profile Page\",state)\r\n\r\n    const [messageBar, setMessageBar] = useState(\"\");\r\n\r\n    const logout = () => {\r\n        axios.post(`${baseUrl}/api/v1/logout`, {}, {\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            if (state?.user?.name) {\r\n                setMessageBar(true);\r\n                setTimeout(() => {\r\n                    history.push(\"/\");\r\n                    dispatch({\r\n                        type: \"USER_LOGOUT\",\r\n                        payload: null,\r\n                    });\r\n                    setMessageBar([]);\r\n                }, 1000);\r\n            }\r\n\r\n            else {\r\n                setMessageBar(false);\r\n                setTimeout(() => {\r\n                    setMessageBar([]);\r\n                }, 1000);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}></IconButton>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Dashboard\r\n                        </Typography>\r\n\r\n                        <ProfileComponenet />\r\n                        <Button color=\"inherit\" onClick={logout}>Logout</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n            <Paper variant=\"outlined\" >\r\n                <Posts />\r\n            </Paper>\r\n\r\n            {\r\n                messageBar === true ? (\r\n                    <Message type=\"success\" message=\"Good bye!\" />\r\n                ) : (\r\n                    \"\"\r\n                )\r\n            }\r\n            {\r\n                messageBar === false ? (\r\n                    <Message type=\"error\" message=\"Sorry! Something went wrong\" />\r\n                ) : (\r\n                    \"\"\r\n                )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Dashboard() {\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}  >\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            <span onClick={() => history.push(\"/\")} style={{ cursor: \"pointer\" }}>\r\n                                Task Application\r\n                            </span>\r\n                        </Typography>\r\n\r\n\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/login\")}>\r\n                            Login\r\n                        </Button>\r\n\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/signup\")}>\r\n                            Signup\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n\r\n            <h1>Welcome to the App , Navigate to proceed</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport AppBar from '@mui/material/AppBar';\r\n\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst steps = ['Enter Your Email', 'Enter OTP', 'Register New Password'];\r\n\r\nexport default function ForgetPassword() {\r\n    const history = useHistory();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n\r\n    const isStepOptional = (step) => {\r\n        return step === null;\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const handleNext = () => {\r\n        let newSkipped = skipped;\r\n        if (isStepSkipped(activeStep)) {\r\n            newSkipped = new Set(newSkipped.values());\r\n            newSkipped.delete(activeStep);\r\n        }\r\n\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        setSkipped(newSkipped);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleSkip = () => {\r\n        if (!isStepOptional(activeStep)) {\r\n            // You probably want to guard against something like this,\r\n            // it should never occur unless someone's actively trying to break something.\r\n            throw new Error(\"You can't skip a step that isn't optional.\");\r\n        }\r\n\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        setSkipped((prevSkipped) => {\r\n            const newSkipped = new Set(prevSkipped.values());\r\n            newSkipped.add(activeStep);\r\n            return newSkipped;\r\n        });\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}  >\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            <span onClick={() => history.push(\"/\")} style={{ cursor: \"pointer\" }}>\r\n                                Task Application\r\n                            </span>\r\n                        </Typography>\r\n\r\n\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/login\")}>\r\n                            Login\r\n                        </Button>\r\n\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/signup\")}>\r\n                            Signup\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n\r\n\r\n            <Container>\r\n                <Box sx={{ width: '100%', mt: 5 }}>\r\n\r\n\r\n\r\n                    <Stepper activeStep={activeStep}>\r\n                        {steps.map((label, index) => {\r\n                            const stepProps = {};\r\n                            const labelProps = {};\r\n                            if (isStepOptional(index)) {\r\n                                labelProps.optional = (\r\n                                    <Typography variant=\"caption\">Optional</Typography>\r\n                                );\r\n                            }\r\n                            if (isStepSkipped(index)) {\r\n                                stepProps.completed = false;\r\n                            }\r\n                            return (\r\n                                <Step key={label} {...stepProps}>\r\n                                    <StepLabel {...labelProps}>{label}</StepLabel>\r\n                                </Step>\r\n                            );\r\n                        })}\r\n                    </Stepper>\r\n\r\n\r\n\r\n                    {activeStep === steps.length ? (\r\n                        <React.Fragment>\r\n                            <Typography sx={{ mt: 2, mb: 1 }}>\r\n                                All steps completed - you&apos;re finished\r\n                            </Typography>\r\n\r\n                            \r\n                            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                                <Box sx={{ flex: '1 1 auto' }} />\r\n                                <Button onClick={handleReset}>Reset</Button>\r\n                            </Box>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <Typography sx={{ mt: 2, mb: 1 }}>\r\n\r\n\r\n\r\n\r\n                                Step {activeStep + 1}\r\n\r\n\r\n                            </Typography>\r\n                            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                                <Button color=\"inherit\" disabled={activeStep === 0} onClick={handleBack} sx={{ mr: 1 }}> Back  </Button>\r\n\r\n                                <Box sx={{ flex: '1 1 auto' }} />\r\n\r\n                                {isStepOptional(activeStep) && (\r\n                                    <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\r\n                                        Skip\r\n                                    </Button>\r\n                                )}\r\n\r\n                                <Button onClick={handleNext}>\r\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                </Button>\r\n                            </Box>\r\n                        </React.Fragment>\r\n                    )}\r\n                </Box>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n","import \"./App.css\";\r\nimport { useEffect ,useContext} from \"react\";\r\nimport SignUp from \"./Components/signup\";\r\nimport LogIn from \"./Components/login\";\r\nimport Profile from \"./Components/profile\";\r\nimport Dashboard from \"./Components/dashboard\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport forgetPassword from \"./Components/forgetPassword\";\r\n\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"./Context/context\";\r\n// import {storage} from './firebase'\r\n\r\n\r\nfunction App() {\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n  const dev = \"http://localhost:5000\";\r\n  const baseURL =\r\n    window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${baseURL}/api/v1/profile`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        if (res?.data?.email) {\r\n          dispatch({\r\n            type: \"USER_LOGIN\",\r\n            payload: {\r\n              name: res.data.name,\r\n              email: res.data.email,\r\n              _id: res.data._id,\r\n              created: res.data.created,\r\n            },\r\n          });\r\n        } else {\r\n          dispatch({ type: \"USER_LOGOUT\" });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"USER_LOGOUT\" });\r\n      });\r\n    return () => {};\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {/* <Switch>\r\n        <Route path=\"/login\">\r\n          <LogIn />\r\n        </Route>\r\n        \r\n        <Route path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n\r\n        <Route exact path=\"/signup\">\r\n          <SignUp />\r\n        </Route>\r\n\r\n        <Route exact path=\"/\">\r\n          <Dashboard />\r\n        </Route>\r\n      </Switch> */}\r\n      {state.user === undefined ? (\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {/* <Splash /> */}\r\n            <h1>Loading...</h1>\r\n          </Route>\r\n          <Route path=\"*\">\r\n            {/* <Splash /> */}\r\n            <h1>Loading...</h1>\r\n          </Route>\r\n        </Switch>\r\n      ) : null}\r\n      {state.user === null ? (\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route exact path=\"/login\" component={LogIn} />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n          <Route path=\"/forget_password\" component={forgetPassword} />\r\n          <Route path=\"*\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      ) : null}\r\n      {state.user ? (\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Route path=\"*\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ContextProvider from './Context/context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}