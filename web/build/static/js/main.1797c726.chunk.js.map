{"version":3,"sources":["core.js","Components/signup.jsx","Components/message.jsx","Context/reducer.jsx","Context/context.jsx","Components/login.jsx","Components/profileComponent.jsx","Components/ModalContent.jsx","Components/PostsTemplate.jsx","Components/posts.jsx","Components/profile.jsx","Components/dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","validationSchema","yup","email","required","password","min","max","name","SignUp","history","useHistory","formik","useFormik","initialValues","onSubmit","values","resetForm","axios","post","then","res","console","log","data","push","className","Container","sx","marginTop","Paper","p","margin","maxWidth","flexGrow","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","to","Message","props","width","position","Alert","severity","message","reducer","state","action","payload","_id","user","GlobalContext","createContext","undefined","ContextProvider","children","useReducer","dispatch","Provider","LogIn","useContext","useState","messageBar","setMessageBar","withCredentials","created","setTimeout","catch","e","SwipeableTemporaryDrawer","anchor","React","left","menuToggle","setmenuToggle","toggleDrawer","open","event","key","Fragment","onClick","SwipeableDrawer","onClose","onOpen","Box","role","onKeyDown","List","ListItem","Avatar","alt","height","src","Typography","gutterBottom","component","marginLeft","Divider","button","ListItemIcon","ListItemText","primary","subject","description","ModalContent","show","setShow","Modal","onHide","Header","closeButton","Title","Body","m","multiline","rows","AllPosts","Grid","container","justifyContent","posts","map","item","md","Card","CardHeader","avatar","bgcolor","red","title","subheader","IconButton","CardContent","CardActions","size","Posts","setValue","allPost","setAllPost","continuousPost","setContinuousPost","currentUserPosts","setCurrentUserPosts","useEffect","get","result","arr","forEach","element","unshift","filter","elevation","typography","TabContext","borderBottom","borderColor","TabList","newValue","centered","Tab","TabPanel","Skeleton","Profile","AppBar","Toolbar","edge","mr","Dashboard","style","cursor","App","baseURL","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1797c726.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import * as React from 'react';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport { Container, Paper, Button, TextField, Stack } from '@mui/material';\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from '../core'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n});\r\n\r\n\r\nexport default function SignUp() {\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        },\r\n\r\n        onSubmit: function (values, { resetForm }) {\r\n            axios.post(`${baseUrl}/api/v1/signup`, {\r\n                name: values.name,\r\n                email: values.email,\r\n                password: values.password,\r\n            }).then((res) => {\r\n                console.log(\"res: \", res.data);\r\n                if (res.data) {\r\n                    history.push(\"/login\")\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div  className=\"SignUpMain\">\r\n            <Container sx={{ marginTop: '5%' }}>\r\n                <Paper sx={{ p: 5, margin: 'auto', maxWidth: 500, flexGrow: 1 }}>\r\n                    <h1> Sign Up</h1>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack spacing={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                variant=\"outlined\"\r\n                                name=\"name\"\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText={formik.touched.name && formik.errors.name}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                            />\r\n\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Sign Up</Button>\r\n                            <Link to=\"/login\">Already Have an Account? Login</Link>\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function Message(props) {\r\n  return (\r\n    <Stack sx={{ width: \"100%\", position: \"absolute\" }} spacing={2}>\r\n      <Alert severity={props.type}>{props.message}</Alert>\r\n    </Stack>\r\n  );\r\n}","export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"USER_LOGIN\": {\r\n            if (\r\n                action.payload.name &&\r\n                action.payload.email && action.payload._id\r\n                // action.payload._id &&\r\n                // action.payload.created\r\n                \r\n                ) {\r\n                // console.log(\"CurrentUser ==>\", action.payload)\r\n                return { ...state, user: action.payload };\r\n            }\r\n\r\n            else {\r\n                console.log(`invalid data in USER_LOGIN reducer `, action.payload);\r\n                return state;\r\n            }\r\n        }\r\n\r\n        case \"USER_LOGOUT\": {\r\n            return { ...state, user: null }; // set this to null on purpose, do not change\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n    user: undefined,\r\n};\r\n\r\nexport default function ContextProvider({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, data);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React, { useState, useContext } from \"react\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport { Container, Paper, Button, TextField, Stack } from '@mui/material';\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from '../core'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Message from './message';\r\nimport { GlobalContext } from '../Context/context'\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n});\r\n\r\n\r\nexport default function LogIn() {\r\n\r\n    let { dispatch } = useContext(GlobalContext);\r\n\r\n    let history = useHistory();\r\n    const [messageBar, setMessageBar] = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit:(values )=> {\r\n            // console.log(\"values: \", values)\r\n\r\n            axios.post(`${baseUrl}/api/v1/login`, {\r\n                email: values.email,\r\n                password: values.password,\r\n            },{\r\n                withCredentials: true\r\n            }).then((res) => {\r\n\r\n                console.log(\"res: \", res.data);\r\n\r\n                // localStorage.setItem('currentUser',JSON.stringify(res.data))\r\n\r\n                // if (res.data.email) {\r\n                //     setTimeout(() => {\r\n                //         history.push(\"/profile\")\r\n                //         setMessageBar([]);\r\n                //     }, 1000);\r\n                //     setMessageBar(true);\r\n                //     // history.push(\"/profile\")\r\n                // }\r\n                // resetForm({})\r\n\r\n                if (res.data) {\r\n\r\n            //         console.log(res.data);\r\n\r\n                    dispatch({\r\n                        type: \"USER_LOGIN\",\r\n                        payload: {\r\n                            // token:res.data.token,\r\n                            name: res.data.name,\r\n                            email: res.data.email,\r\n                            _id: res.data._id,\r\n                            created: res.data.created\r\n                            // name: res.data.name,\r\n                            // email: res.data.email,\r\n                            // password: res.data.password,\r\n                            // created: res.data.created\r\n                        },\r\n                    });\r\n\r\n            //         //message\r\n                    setMessageBar(true);\r\n                    setTimeout(() => {\r\n                        history.push(\"/profile\");\r\n                        setMessageBar([]);\r\n                    }, 1000);\r\n                }\r\n\r\n                else {\r\n                    setMessageBar(false);\r\n                    setTimeout(() => {\r\n                        setMessageBar([]);\r\n                    }, 1000);\r\n                }\r\n            }).catch((e) => {\r\n                console.log(\"receive error from database\", e);\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"LoginMain\">\r\n\r\n            {messageBar === true ? <Message type=\"success\" message=\"Welcome\" /> : \"\"}\r\n            {messageBar === false ? (<Message type=\"error\" message=\"Invalid email or password\" />) : (\"\")}\r\n\r\n            <Container sx={{ marginTop: '5%' }}>\r\n                <Paper sx={{ p: 5, margin: 'auto', maxWidth: 500, flexGrow: 1 }}>\r\n\r\n                    <h1> Log In</h1>\r\n\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack spacing={2}>\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"filled-basic\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                            />\r\n\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Log In</Button>\r\n                            <Link to=\"/signup\">Don't Have an Account? SignUp</Link>\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from '../Context/context'\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport Divider from '@mui/material/Divider';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\n// import EditProfile from './editProfile'\r\n// import Stack from '@mui/material/Stack';\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n\r\n    let { state} = useContext(GlobalContext);\r\n    // console.log(\"Profile==>\",state)\r\n\r\n    const [menuToggle, setmenuToggle] = React.useState({\r\n        left: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setmenuToggle({ ...menuToggle, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <Box sx={{ width: 300 }} role=\"presentation\" onClick={toggleDrawer(anchor, false)} onKeyDown={toggleDrawer(anchor, false)}>\r\n\r\n            <List>\r\n\r\n                <ListItem >\r\n                    <Avatar alt=\"User\"\r\n                        sx={{ width: 56, height: 56 }}\r\n                        src=\"https://media-exp1.licdn.com/dms/image/C5103AQGAb_GYoLFM7A/profile-displayphoto-shrink_200_200/0/1564347397659?e=1639612800&v=beta&t=1zAw1iPqsETqK7DUN2nXvydn8wnz8n26I1pMPXUP0_c\" />\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\"\r\n                        sx={{ marginLeft: 3, marginTop: 1 }}>\r\n                        {state.user.name}\r\n                    </Typography>\r\n\r\n                </ListItem>\r\n\r\n            </List>\r\n\r\n            <Divider />\r\n\r\n\r\n            <List>\r\n                <ListItem button key={state.user.name}>\r\n                    <ListItemIcon>\r\n                        <AccountBoxIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.name} />\r\n                </ListItem>\r\n\r\n                <ListItem button key={state.user.email}>\r\n                    <ListItemIcon>\r\n                        <MailIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.email} />\r\n                </ListItem>\r\n\r\n                <ListItem button key={state.user.created}>\r\n                    <ListItemIcon>\r\n                        <DateRangeIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={state.user.created} />\r\n                </ListItem>\r\n            </List>\r\n\r\n\r\n            <Divider />\r\n\r\n            {/* <List>\r\n\r\n                <ListItem >\r\n                    <EditProfile />\r\n                </ListItem>\r\n\r\n            </List> */}\r\n\r\n\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment key='left'>\r\n                <Button color=\"inherit\" onClick={toggleDrawer('left', true)}>Profile</Button>\r\n                <SwipeableDrawer anchor='left' open={menuToggle['left']} onClose={toggleDrawer('left', false)} onOpen={toggleDrawer('left', true)} >\r\n                    {list('left')}\r\n                </SwipeableDrawer>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    subject: yup\r\n        .string('Enter your Subject')\r\n        .required('Email is required'),\r\n    description: yup\r\n        .string('Enter your Description')\r\n        .required('Password is required'),\r\n});\r\n\r\n\r\nfunction ModalContent() {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            subject: '',\r\n            description: '',\r\n        },\r\n\r\n\r\n\r\n        onSubmit: function (values) {\r\n            console.log(values);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"light\" onClick={handleShow}>\r\n                Edit\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update Post</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Box sx={{ m: 3 }}>\r\n\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <Stack spacing={2}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    color=\"primary\"\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Subject\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"subject\"\r\n                                    value={formik.values.subject}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n                                    helperText={formik.touched.subject && formik.errors.subject}\r\n                                />\r\n\r\n                                <TextField\r\n                                    fullWidth multiline\r\n                                    color=\"primary\" id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" name=\"description\"\r\n                                    rows={4}\r\n                                    value={formik.values.description}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                    helperText={formik.touched.description && formik.errors.description}\r\n                                />\r\n\r\n\r\n                                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Post</Button>\r\n                            </Stack>\r\n                        </form>\r\n                    </Box>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default ModalContent","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport Grid from '@mui/material/Grid';\r\nimport Divider from '@mui/material/Divider';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { GlobalContext } from '../Context/context'\r\nimport ModalContent from './ModalContent'\r\n\r\nexport default function AllPosts(props) {\r\n\r\n    let { state } = useContext(GlobalContext);\r\n\r\n    // console.log(\"POst template\", state)\r\n\r\n    // console.log(\"Data in Props ==>\", props)\r\n    return (\r\n        <div>\r\n\r\n            <Grid container spacing={2} sx={{ flexGrow: 1 }} justifyContent=\"center\">\r\n                {props.posts.map(post => {\r\n                    return (\r\n\r\n                        <Grid item md={6} key={post._id}>\r\n\r\n                            <Card sx={{ maxWidth: 'auto', height: '250px' }}>\r\n\r\n\r\n\r\n                                <CardHeader\r\n                                    avatar={<Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\"> A </Avatar>}\r\n                                    title={post.user} subheader={post.created}\r\n\r\n\r\n\r\n\r\n\r\n                                    action={\r\n\r\n                                        (state.user.email === post.email) ?\r\n                                            // <IconButton aria-label=\"settings\">\r\n                                            //     <EditIcon />\r\n                                            // </IconButton>\r\n\r\n                                            <ModalContent />\r\n                                            :\r\n                                            <IconButton aria-label=\"settings\">\r\n                                                <MoreVertIcon />\r\n                                            </IconButton>\r\n\r\n\r\n\r\n                                    }\r\n                                />\r\n                                <Divider />\r\n\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                        {post.subject}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        {post.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n\r\n                                <CardActions>\r\n                                    <Button size=\"small\">Share</Button>\r\n                                    <Button size=\"small\">Learn More</Button>\r\n                                </CardActions>\r\n\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import Box from \"@mui/material/Box\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport TabContext from \"@mui/lab/TabContext\";\r\nimport TabList from \"@mui/lab/TabList\";\r\nimport TabPanel from \"@mui/lab/TabPanel\";\r\nimport PostsTemplate from \"./PostsTemplate\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport { baseUrl } from \"../core\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { GlobalContext } from \"../Context/context\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst validationSchema = yup.object({\r\n  subject: yup.string(\"Enter your Subject\").required(\"Email is required\"),\r\n  description: yup\r\n    .string(\"Enter your Description\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nfunction Posts() {\r\n  const [value, setValue] = React.useState(\"1\");\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  let { state } = useContext(GlobalContext);\r\n  // console.log(state)\r\n\r\n  const [allPost, setAllPost] = useState(null);\r\n  const [continuousPost, setContinuousPost] = useState(false);\r\n  const [currentUserPosts, setCurrentUserPosts] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${baseUrl}/api/v1/post`, { withCredentials: true })\r\n      .then((result) => {\r\n        // console.log(\"POSTS in DB ==>\", result);\r\n        let arr = [];\r\n        result.data.forEach((element) => {\r\n          arr.unshift(element);\r\n        });\r\n\r\n        setAllPost([...arr]);\r\n\r\n        let currentUserPosts = arr.filter(\r\n          (post) => post.email === state.user.email\r\n        );\r\n        setCurrentUserPosts(currentUserPosts);\r\n      });\r\n    return () => {\r\n      // cleanup\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, [continuousPost]);\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      subject: \"\",\r\n      description: \"\",\r\n    },\r\n\r\n    onSubmit: function (values) {\r\n      console.log(values);\r\n\r\n      axios\r\n        .post(`${baseUrl}/api/v1/post`, {\r\n          user: state.user.name,\r\n          email: state.user.email,\r\n          subject: values.subject,\r\n          description: values.description,\r\n        },{\r\n            withCredentials:true\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n          // if (res.data) {\r\n          //     history.push(\"/login\")\r\n          setContinuousPost(!continuousPost);\r\n          // }\r\n        });\r\n    },\r\n  });\r\n\r\n  // const [posts, setPosts] = useState(\r\n  //     [\r\n  //         {\r\n  //             key: 1,\r\n  //             avatar: 'U',\r\n  //             user: 'Usama Usman',\r\n  //             date: '27 October 2021',\r\n  //             main: 'Dummy',\r\n  //             Description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore temporibus porro quidem laborum maiores? Reprehenderit ratione ipsum recusandae nihil? Alias saepe porro possimus eligendi accusantium odit, at voluptates mollitia vel.'\r\n\r\n  //         },\r\n\r\n  //         {\r\n  //             key: 2,\r\n  //             avatar: 'A',\r\n  //             user: 'Abdul Rafeh',\r\n  //             date: '27 October 2021',\r\n  //             main: 'Abdul Rafeh',\r\n  //             Description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore temporibus porro quidem laborum maiores? Reprehenderit ratione ipsum recusandae nihil? Alias saepe porro possimus eligendi accusantium odit, at voluptates mollitia vel.'\r\n  //         },\r\n  //         {\r\n  //             key: 3,\r\n  //             avatar: 'J',\r\n  //             user: 'Javed Ali',\r\n  //             date: '27 October 2021',\r\n  //             main: 'Javed Ali',\r\n  //             Description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore temporibus porro quidem laborum maiores? Reprehenderit ratione ipsum recusandae nihil? Alias saepe porro possimus eligendi accusantium odit, at voluptates mollitia vel.'\r\n\r\n  //         },\r\n  //     ]\r\n  // );\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 3 }}>\r\n        <Paper elevation={3} sx={{ p: 5 }}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Stack spacing={2}>\r\n              <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Subject\"\r\n                variant=\"outlined\"\r\n                name=\"subject\"\r\n                value={formik.values.subject}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n                helperText={formik.touched.subject && formik.errors.subject}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                color=\"primary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                name=\"description\"\r\n                rows={4}\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.description &&\r\n                  Boolean(formik.errors.description)\r\n                }\r\n                helperText={\r\n                  formik.touched.description && formik.errors.description\r\n                }\r\n              />\r\n\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Post\r\n              </Button>\r\n            </Stack>\r\n          </form>\r\n        </Paper>\r\n      </Box>\r\n\r\n      <Box sx={{ width: \"100%\", typography: \"body1\" }}>\r\n        <TabContext value={value}>\r\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n            <TabList\r\n              onChange={handleChange}\r\n              aria-label=\"lab API tabs example\"\r\n              centered\r\n            >\r\n              <Tab label=\"News Feed\" value=\"1\" />\r\n              <Tab label=\"My Posts\" value=\"2\" />\r\n            </TabList>\r\n          </Box>\r\n          <TabPanel value=\"1\">\r\n            {allPost && <PostsTemplate posts={allPost} />}\r\n\r\n            {!allPost && (\r\n              <div>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  sx={{ flexGrow: 1 }}\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Grid item md={6}>\r\n                    <Stack spacing={1}>\r\n                      <Skeleton variant=\"text\" />\r\n                      <Skeleton variant=\"circular\" width={40} height={40} />\r\n                      <Skeleton\r\n                        variant=\"rectangular\"\r\n                        width={210}\r\n                        height={250}\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n\r\n                  <Grid item md={6}>\r\n                    <Stack spacing={1}>\r\n                      <Skeleton variant=\"text\" />\r\n                      <Skeleton variant=\"circular\" width={40} height={40} />\r\n                      <Skeleton\r\n                        variant=\"rectangular\"\r\n                        width={210}\r\n                        height={250}\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel value=\"2\">\r\n            {currentUserPosts && <PostsTemplate posts={currentUserPosts} />}\r\n\r\n            {!currentUserPosts && (\r\n              <div>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  sx={{ flexGrow: 1 }}\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Grid item md={6}>\r\n                    <Stack spacing={1}>\r\n                      <Skeleton variant=\"text\" />\r\n                      <Skeleton variant=\"circular\" width={40} height={40} />\r\n                      <Skeleton\r\n                        variant=\"rectangular\"\r\n                        width={210}\r\n                        height={250}\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n\r\n                  <Grid item md={6}>\r\n                    <Stack spacing={1}>\r\n                      <Skeleton variant=\"text\" />\r\n                      <Skeleton variant=\"circular\" width={40} height={40} />\r\n                      <Skeleton\r\n                        variant=\"rectangular\"\r\n                        width={210}\r\n                        height={250}\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </TabPanel>\r\n        </TabContext>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import React, { useContext, useState } from \"react\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ProfileComponenet from './profileComponent'\r\nimport { GlobalContext } from '../Context/context'\r\nimport Paper from '@mui/material/Paper';\r\nimport Posts from './posts'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Message from './message'\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../core';\r\n\r\nexport default function Profile() {\r\n    const history = useHistory();\r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n\r\n    // console.log(\"State in Profile Page\",state)\r\n\r\n    const [messageBar, setMessageBar] = useState(\"\");\r\n\r\n    const logout = () => {\r\n        axios.post(`${baseUrl}/api/v1/logout`, {}, {\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            if (state?.user?.name) {\r\n                setMessageBar(true);\r\n                setTimeout(() => {\r\n                    history.push(\"/\");\r\n                    dispatch({\r\n                        type: \"USER_LOGOUT\",\r\n                        payload: null,\r\n                    });\r\n                    setMessageBar([]);\r\n                }, 1000);\r\n            }\r\n\r\n            else {\r\n                setMessageBar(false);\r\n                setTimeout(() => {\r\n                    setMessageBar([]);\r\n                }, 1000);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}></IconButton>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Dashboard\r\n                        </Typography>\r\n\r\n                        <ProfileComponenet />\r\n                        <Button color=\"inherit\" onClick={logout}>Logout</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n            <Paper variant=\"outlined\" >\r\n                <Posts />\r\n            </Paper>\r\n\r\n            {\r\n                messageBar === true ? (\r\n                    <Message type=\"success\" message=\"Good bye!\" />\r\n                ) : (\r\n                    \"\"\r\n                )\r\n            }\r\n            {\r\n                messageBar === false ? (\r\n                    <Message type=\"error\" message=\"Sorry! Something went wrong\" />\r\n                ) : (\r\n                    \"\"\r\n                )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Dashboard() {\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}  >\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            <span onClick={() => history.push(\"/\")} style={{ cursor: \"pointer\" }}>\r\n                                Task Application\r\n                            </span>\r\n                        </Typography>\r\n\r\n\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/login\")}>\r\n                            Login\r\n                        </Button>\r\n\r\n                        <Button color=\"inherit\" onClick={() => history.push(\"/signup\")}>\r\n                            Signup\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n\r\n            <h1>Welcome to the App , Navigate to proceed</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import \"./App.css\";\r\nimport { useEffect ,useContext} from \"react\";\r\nimport SignUp from \"./Components/signup\";\r\nimport LogIn from \"./Components/login\";\r\nimport Profile from \"./Components/profile\";\r\nimport Dashboard from \"./Components/dashboard\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"./Context/context\";\r\n\r\n\r\nfunction App() {\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n  const dev = \"http://localhost:5000\";\r\n  const baseURL =\r\n    window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${baseURL}/api/v1/profile`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        if (res?.data?.email) {\r\n          dispatch({\r\n            type: \"USER_LOGIN\",\r\n            payload: {\r\n              name: res.data.name,\r\n              email: res.data.email,\r\n              _id: res.data._id,\r\n              created: res.data.created,\r\n            },\r\n          });\r\n        } else {\r\n          dispatch({ type: \"USER_LOGOUT\" });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"USER_LOGOUT\" });\r\n      });\r\n    return () => {};\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Switch>\r\n        <Route path=\"/login\">\r\n          <LogIn />\r\n        </Route>\r\n        \r\n        <Route path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n\r\n        <Route exact path=\"/signup\">\r\n          <SignUp />\r\n        </Route>\r\n\r\n        <Route exact path=\"/\">\r\n          <Dashboard />\r\n        </Route>\r\n      </Switch> */}\r\n      {state.user === undefined ? (\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {/* <Splash /> */}\r\n            <h1>Loading...</h1>\r\n          </Route>\r\n          <Route path=\"*\">\r\n            {/* <Splash /> */}\r\n            <h1>Loading...</h1>\r\n          </Route>\r\n        </Switch>\r\n      ) : null}\r\n      {state.user === null ? (\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route exact path=\"/login\" component={LogIn} />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n          <Route path=\"*\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      ) : null}\r\n      {state.user ? (\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Route path=\"*\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ContextProvider from './Context/context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}